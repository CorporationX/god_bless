Условия задачи
В мультсериале «Гриффины» главным героям приходится постоянно бороться со своими проблемами и заботами.
Одной из таких забот является получение пищи. Ваша задача — написать программу, которая будет помогать Гриффинам получать еду.
Нужно запустить 3 задачи, каждая из которых имитирует получение еды персонажем, путем ожидания в течение случайного количества секунд (от 1 до 5).
Тип еды также выбирается случайно из предопределенного списка. В конце каждой задачи выводится информация о том, какой персонаж получил сколько еды какого типа.

1. Создайте класс FoodDeliveryTask, который реализует интерфейс Runnable. Здесь нужно два поля:

private String character;

private int foodAmount;

Добавьте соответствующий конструктор.

Также здесь необходим метод getFoodType(), его можете скопировать отсюда, чтобы не тратить время на выдумывание еды,
которая порадовала бы Питера. Этот метод просто достает случайный тип еды из массива.

private String getFoodType() {
    String[] foodTypes = {"pizza", "burger", "hot dog", "chicken wings", "taco"};
    return foodTypes[new Random().nextInt(foodTypes.length)];
}
2. В методе run() необходимо выбрать какой-то тип еды из доступных и затем отправить эту еду персонажу. Здесь мы ожидаем:

Увидеть сообщения о начале доставки, например: Питер получает 50 куриных крылышек;

Подождать, пока Питер получит доставку;

Увидеть сообщение о том, что Питер всё получил, например: Питер ест 50 куриных крылышек.

3. Создайте класс GriffinsFoodDelivery с методом main. Здесь нужно создать ExecutorService на 3 потока.

4. Создаём список с именами персонажей:

String[] characterNames = {"Peter", "Lois", "Meg", "Chris", "Stewie"};
5. В цикле запускаем потоки. В конструктор FoodDeliveryTask передаём имя персонажа и
случайно сгенерированное число — это будет количество еды. Накормить нужно всех!

6. Не забудьте закрыть пул потоков.