Условия задачи
Вы работаете на проекте, который занимается разработкой почтового клиента, например, Microsoft Outlook.

Сейчас отправление всех сообщений реализовано в один поток. Сообщения от пользователей становятся в очередь,
а затем ваш сервис начинает разбирать их по порядку. Вы, как разработчик, активно предлагающий идеи по улучшению
ваших продуктов, решаете сделать разбор сообщений параллельным.

Сейчас в очереди накопилось 1000 почтовых сообщений, которые нужно отправить. Необходимо создать 5 потоков,
каждый из которых будет отправлять по 200 сообщений:

Создайте класс SenderRunnable, реализующий интерфейс Runnable.
Так как каждый поток будет работать только со своей пачкой писем, нам нужно создать объект этого класса,
передав туда int startIndex и int endIndex. В этом классе описываем логику для отправки писем.
Пока что можно просто вывести на экран какую-нибудь строку об успешной отправке письма.

Создадим класс MailSender в котором приложение будет запускаться.

В методе main() создадим 5 потоков с помощью классов Thread и SenderRunnable.
Каждому потоку нужно передать свой блок писем. Одно и то же письмо отправлять два раза нет смысла!

Дождемся завершения работы всех потоков. Здесь нужно использовать thread.join().
Когда все сообщения отправлены, подать какой-нибудь сигнал.