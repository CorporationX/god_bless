Условия задачи
Вы разрабатываете новую версию игры Bro Force. В игре множество игровых объектов одновременно обновляют свои состояния.
Враги, игроки и препятствия, могут взаимодействовать друг с другом и изменять общие переменные, такие как здоровье,
позиция и т.д. Это может привести к проблемам с доступом к общим ресурсам и возможным нарушениям целостности данных.
Чтобы избежать этих проблем, необходимо использовать блокировку synchronized.

Создать класс Game с приватными полями score (счётчик набранных очков за игру всеми участниками) и lives
(количество потерянных всеми участниками жизней), а также с двумя объектами для доступа к общему счётчику очков и
количеству потерянных жизней соответственно. Подумайте, как вы можете это сделать.

Создать метод update(), который будет вызываться каждый раз при обновлении игры. Данный метод должен блокировать
доступ к счётчику очков и количеству жизней, чтобы гарантировать корректность обновления данных. Нужно учитывать,
что одновременно не могут происходить два этих действия: увеличение очков и уменьшение количества жизней.
Суть в том, если персонажа кто-то убил, то он теряет жизнь и не может получить новых очков.

Внутри метода update() увеличивать общий счётчик очков на 1 и считать общее количество потерянных жизней на 1,
если игрок их теряет. Если у кого-то их игроков больше нет жизней, вызывать метод gameOver().

Создать приватный метод gameOver(), который будет обрабатывать конец игры.

Запустить игру и вызвать метод update() в цикле, чтобы обновлять игру на каждом шаге.