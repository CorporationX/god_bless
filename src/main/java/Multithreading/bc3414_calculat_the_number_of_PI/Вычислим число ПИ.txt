Условия задачи
Нам дан рандомный генератор чисел, который возвращает число от 0 до 1.
Нам сказали с помощью него вычислить число Пи. Мы придумали решение,
которое выглядит следующим образом:

1. Воспользуемся генератором 2 раза, назовём результаты x и y.
В итоге у нас получилась точка A с координатами (x, y) на координатной плоскости.

2. Заметим, что эта точка попадёт внутрь квадрата на изображении,
при этом она может расположиться как внутри окружности, так и вне её
Точка попала внутрь окружности, если выполняется неравенство:

x^2 + y^2 <= R^2 (значит попали внутрь окружности)
Так, например точка (0.5, 0.5) попадёт внутрь окружности радиуса 1,
а точка (0.8, 0.8) не попадёт
3. Повторим это действие множество раз, — так у нас будут точки:
какая-то часть из них попадёт внутрь окружности, а другая часть останется вне её.

4. Посчитаем количество точек внутри окружности, обозначим это число за inside,
и также посчитаем число всех точек — обозначим за all .

5. Произведём некоторые вычисления:

Площадь окружности
S_о = π * R^2 = π * 1 * 1 = π
Площадь квадрата
S_к = a * a = 1 * 1 = 1

Площадь четверти окружности
S_o/4 = S_o / 4 = π / 4

При этом, у нас:
S_o/4 / S_k = inside / all = π / 4

Тогда, чтобы узнать число π, нужно вычислить выражение:
π = 4 * inside / all

Дело в том, что чем больше у нас будет точек, тем точнее будет результат.
Поэтому, вам нужно реализовать эту задачу в многопоточной среде с
использованием ThreadLocalRandom и CompletableFuture в лице метода
double calculatePi(int n).

Нужно сделать stream CopmpletableFeature, и на первом этапе вычислить
координаты нашей точки (для этого можно завести отдельный класс Point),
далее, на основе этих координат, нужно вычислить результат.