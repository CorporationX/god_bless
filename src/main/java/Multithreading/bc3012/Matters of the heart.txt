Условия задачи
Вы — разработчик Tinder. Приложение содержит список пользователей, которые ищут свою вторую половинку.
Приложение работает в многопоточной среде, используя класс UserList, который представляет список пользователей.

Некоторые пользователи хотят общаться с другими пользователями в реальном времени, но не хотят показывать свой
статус в списке.

В классе UserList есть метод getOnlineUsers(), который возвращает список пользователей, которые в
данный момент находятся онлайн. В классе ChatManager есть метод startChat(User user), который вызывается,
когда пользователь хочет начать чат. Метод startChat() должен найти другого пользователя, который также
хочет начать чат, и создать для них новый чат. Если в данный момент никто не желает общаться в реальном времени,
метод должен ожидать, пока появится другой пользователь, который также хочет начать чат.

Создайте класс User, содержащий поля и методы для работы с пользователями.

Создайте класс UserList, который будет содержать список пользователей и методы для работы с ним.

Создайте класс Chat, который будет представлять чат между двумя пользователями, и методы для работы с ним.

Создайте класс ChatManager, который будет управлять чатами между пользователями и содержать методы startChat(),
waitForChat() и endChat().

В методе startChat() класса ChatManager получите список онлайн пользователей, исключая текущего пользователя.

В методе startChat() проверьте, есть ли другие пользователи, которые хотят начать чат. Если есть, то создайте
новый чат и верните управление из метода.

Если никто не хочет начать чат, вызовите метод wait() и ждите, пока кто-то не присоединится.

В методе waitForChat() проверьте, есть ли уже чат, в котором участвует пользователь. Если такой чат не найден,
вызовите метод wait() и ждите, пока чат не будет создан.

Когда чат заканчивается, вызовите метод endChat() и удаляйте его из списка чатов.

В методе endChat() вызовите метод notifyAll(), чтобы разбудить все потоки, ожидающие начала чата.

Запустить в методе main несколько потоков и протестировать работу приложения.