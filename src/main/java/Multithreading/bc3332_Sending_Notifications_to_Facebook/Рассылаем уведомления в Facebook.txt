Условия задачи
Задача: Вам нужно написать Java-приложение, которое представляет собой
простую модель системы уведомлений для Facebook. Вы должны использовать
CompletableFuture для асинхронного получения уведомлений и synchronized
для контроля доступа к списку уведомлений.

Пример классов:

Класс Notification — описывает уведомление. id — уникальный идентификатор
уведомления.message — сообщение уведомления.

Основные шаги:

Создайте класс Notification с полями id и message, а также конструктором и геттерами.

Создайте класс NotificationManager, который будет управлять уведомлениями и хранить
их в списке.

В классе NotificationManager создайте метод synchronized addNotification(Notification),
который добавляет уведомление в список. Подумайте, почему он должен быть synchronized?
Какая у нас мотивация его делать таковым?

Создайте асинхронный метод fetchNotification(), который создаёт новое уведомление и
добавляет его в список уведомлений через вызов addNotification. Этот метод просто будет
запускать новую задачу добавления нотификации в список с помощью CompletableFuture и
возвращать этот CompletableFuture. В самой задаче можно имитировать ожидание с помощью
Thread.sleep .

Вызовете метод fetchNotification несколько раз в цикле, и соберите все CompletableFuture
в общий список выполняющихся операций.

Ожидайте завершения всех задач, используя CompletableFuture.allOf(), и выведите список
уведомлений.