В Spotify есть интересная функция под названием "Group Session". Она позволяет нескольким пользователям управлять воспроизведением музыки одновременно, синхронизируя их действия на разных устройствах в реальном времени. Это значит, что несколько человек могут, например, вместе слушать один и тот же плейлист, даже если они находятся далеко друг от друга.

Давайте реализуем упрощённую версию этой функции! Мы хотим, чтобы несколько пользователей могли управлять воспроизведением музыки на разных устройствах, но при этом не мешали друг другу и не могли одновременно нажать и play и pause, а только по очереди.

Требования:

1. Создайте класс Player, который будет управлять воспроизведением музыки. У этого класса должны быть методы для выполнения следующих действий:

play() — начать воспроизведение музыки,

pause() — поставить на паузу,

skip() — пропустить трек,

previous() — вернуться к предыдущему треку.

2. Добавьте поле lock в класс Player. Это будет объект блокировки.

Блокировка нужна, чтобы только один поток (пользователь) мог менять состояние плеера в любой момент времени.

3. Создайте переменную isPlaying в классе Player, чтобы отслеживать текущее состояние воспроизведения (например, играет музыка или стоит на паузе).

4. Используйте синхронизацию внутри методов класса Player.

Когда один из методов вызывается, нужно захватывать блокировку с помощью synchronized (lock). Это гарантирует, что только один пользователь может менять состояние плеера в данный момент. Внутри блоков синхронизации переключайте состояние флага isPlaying в зависимости от метода.

5. В классе Music создайте несколько потоков, которые будут имитировать действия разных пользователей:

Например, один поток будет вызывать метод play(), другой — pause(), третий — skip(), и т.д.

Для каждого потока используйте лямбда-выражения, чтобы вызвать соответствующие методы объекта player.

Запустите все потоки методом start() и посмотрите, как они взаимодействуют.

