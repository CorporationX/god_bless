Король Роберт Баратеон собирается провести огромный турнир в Королевской Гавани, где рыцари должны пройти через серию испытаний, чтобы продемонстрировать свою силу и мастерство. Для организации турнира с параллельным выполнением испытаний Король Роберт решил использовать ExecutorService — это вы ему подсказали, конечно. Ну и писать, значит, тоже вам…

Требования:

1. Создайте класс Knight, который будет представлять рыцаря.

Объявите поле name типа String для хранения имени рыцаря.

Объявите поле trials типа List<Trial>, которое будет хранить список испытаний для рыцаря.

Добавьте конструктор, который принимает имя рыцаря.

2. Реализуйте метод addTrial(Trial trial), который добавляет испытание в список испытаний рыцаря.

3. Реализуйте метод startTrials(), который запускает все испытания рыцаря в отдельных потоках с использованием пула потоков (ExecutorService).

4. Создайте класс Trial, который представляет одно испытание. Объявите поля knightName (имя рыцаря) и trialName (название испытания).

5. Реализуйте метод run() в классе Trial, который выводит на экран информацию о том, что испытание началось, и выполняет задержку для имитации времени, которое занимает испытание.

6. В методе main() класса King:

Создайте двух рыцарей с помощью класса Knight.

Добавьте минимум два испытания для каждого рыцаря.

Создайте объект ExecutorService с помощью метода Executors.newFixedThreadPool(2).

Запустите испытания для каждого рыцаря, добавив задачи в пул потоков

Закройте пул потоков после завершения всех задач

