Вы работаете над проектом почтового клиента (что-то вроде Microsoft Outlook). В текущей реализации все сообщения отправляются последовательно в одном потоке — ваш сервис отправляет их по очереди. Но вы, как инициативный разработчик, решаете улучшить производительность и предложить параллельную отправку сообщений.

На данный момент в очереди скопилось 1000 писем, и задача состоит в том, чтобы разбить их на 5 потоков, где каждый поток будет обрабатывать и отправлять по 200 писем. Ваша цель — реализовать это распределение, чтобы ускорить процесс и сделать его более эффективным.

Требования:

1. Создать класс SenderRunnable, который реализует интерфейс Runnable. У каждого потока будет своя порция писем, поэтому в конструкторе класса передайте два параметра:

int startIndex

int endIndex.

2. В методе run() этого класса нужно описать логику отправки писем. Для упрощения — можно просто выводить сообщение об успешной отправке письма (например, "Письмо отправлено").

3. Написать класс MailSender, в котором приложение будет запускаться

4. В методе main() этого класса создать 5 потоков с помощью классов Thread и SenderRunnable. Каждый поток должен работать только со своими письмами (по 200 писем на поток).

5. Дождаться завершения всех потоков с помощью метода thread.join(). Когда все письма будут отправлены — вывести финальное сообщение об успешном завершении.