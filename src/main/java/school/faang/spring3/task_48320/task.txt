Представьте, что вы работаете в команде, разрабатывающей программное обеспечение для управления космическими аппаратами в SpaceX. Ваша задача — создать систему для планирования запусков ракет, используя строгие ограничения по времени и требование работы только в одном потоке.

Цель:

Реализовать систему, которая будет планировать запуски ракет в определенное время, используя пул потоков, ограниченный одним потоком, и измерять время выполнения всего процесса планирования.

Требования:

1. Создайте класс RocketLaunch, который будет представлять запуск ракеты. В нем должны быть следующие поля:

name — название запуска.

launchTime — время запуска в миллисекундах.

Добавьте метод launch(), который симулирует запуск ракеты. Этот метод должен:

Задерживаться на 1 секунду (используя Thread.sleep(1000)).

Выводить в консоль сообщение о том, что ракета запускается с указанием ее имени.

2. Напишите метод planRocketLaunches(List<RocketLaunch> launches), который будет:

Принимать список запусков ракет.

Использовать Executors.newSingleThreadExecutor() для планирования каждого запуска в одном потоке.

Планировать запуски в соответствии с временем запуска ракет (поле launchTime).

После каждого запуска вызывать метод launch() для соответствующей ракеты.

3. Измерьте время выполнения метода planRocketLaunches:

Используйте System.currentTimeMillis() для замера времени начала и окончания выполнения метода.

Выведите время выполнения на экран в миллисекундах.

4. Создайте список запусков ракет и добавьте несколько объектов RocketLaunch с разными именами и временем запуска.

5. Вызовите метод planRocketLaunches, передав в него созданный список запусков ракет.