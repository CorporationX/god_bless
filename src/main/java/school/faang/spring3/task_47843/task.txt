В мультсериале «Гриффины» главным героям приходится постоянно бороться со своими проблемами и заботами. Одной из таких забот является получение пищи. Ваша задача — написать программу, которая будет помогать Гриффинам получать еду. Необходимо запустить 3 параллельные задачи, каждая из которых будет доставлять случайное количество еды случайному персонажу. Ожидание доставки будет происходить в течение случайного времени (от 1 до 5 секунд), а тип еды будет выбран случайным образом из заранее заданного списка.

Требования:

1. Создайте класс FoodDeliveryTask, который реализует интерфейс Runnable. В этом классе создайте два поля:

String character — имя персонажа, который получит еду.

int foodAmount — количество еды, которое будет доставлено.

Не забудьте добавить конструктор для инициализации этих полей.

2. Добавьте метод getFoodType() в класс FoodDeliveryTask. Этот метод выбирает случайный тип еды из следующего массива:

private String getFoodType() {
    String[] foodTypes = {"pizza", "burger", "hot dog", "chicken wings", "taco"};
    return foodTypes[new Random().nextInt(foodTypes.length)];
}

3. В методе run() класса FoodDeliveryTask реализуйте логику имитации доставки еды:

Выберите случайный тип еды с помощью метода getFoodType().

Выведите сообщение о начале доставки, например: "Питер получает 50 куриных крылышек".

Используйте Thread.sleep(), чтобы имитировать задержку в доставке (случайное количество секунд от 1 до 5).

Выведите сообщение о завершении доставки, например: "Питер ест 50 куриных крылышек".

4. Создайте класс GriffinsFoodDelivery с методом main(), где:

Создайте объект ExecutorService с пулом из 3 потоков

Создайте список персонажей:

**String[] characterNames = {"Peter", "Lois", "Meg", "Chris", "Stewie"}**.

Запустите доставку еды для всех персонажей в цикле, передавая в конструктор FoodDeliveryTask имя персонажа и случайное количество еды.

Не забудьте закрыть пул потоков после завершения всех задач

