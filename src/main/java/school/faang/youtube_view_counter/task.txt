Описание

Вам нужно разработать многопоточный класс VideoManager, который управляет просмотрами видео на YouTube.
Ваша задача заключается в том, чтобы корректно подсчитывать количество просмотров для каждого видео,
несмотря на большое количество параллельных запросов. Для этого нужно синхронизировать доступ к просмотрам,
чтобы избежать состояния гонки

Требования:
1️⃣ Создайте класс VideoManager с полем viewsMap для хранения количества просмотров видео (используйте Map<String, Integer>).

2️⃣ Реализуйте метод addView(String videoId):

Увеличивает количество просмотров на 1 для заданного videoId.

Метод должен быть потокобезопасным.

3️⃣ Реализуйте метод getViewCount(String videoId):

Возвращает текущее количество просмотров для заданного videoId.

Метод также должен быть потокобезопасным.

4️⃣ В main():

Создайте объект VideoManager.

Задайте количество потоков (NUM_THREADS) и количество видео (NUM_VIDEOS) через константы.

Используйте пул потоков с фиксированным количеством потоков (Executors.newFixedThreadPool).

Запустите внешний цикл по количеству видео (NUM_VIDEOS) и внутренний цикл по количеству потоков (NUM_THREADS).
 Каждый поток должен добавлять просмотр для соответствующего видео.

После добавления задач завершите пул потоков с помощью shutdown(),
 а затем дождитесь завершения всех задач с помощью awaitTermination().

Если задачи не завершились за установленное время, вызовите shutdownNow().