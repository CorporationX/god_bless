Условие задачи:

Вы работаете над системой бронирования помещений, которая должна обеспечивать эффективное распределение доступных комнат и отслеживать наличие удобств в них. В системе бронирования должны учитываться тип комнаты, дата, время, а также удобства, необходимые пользователю. Система также должна поддерживать уведомление заинтересованных сторон (например, администратора или пользователей) о бронировании или освобождении комнаты.

Цель: Научиться работать с коллекциями Set и List для управления уникальными и упорядоченными данными, а также использовать паттерн "Наблюдатель" для уведомления внешних компонентов или пользователей о важных изменениях, таких как бронирование или освобождение комнаты.

Требования:

Создайте класс Room с полями:

int roomId — уникальный идентификатор комнаты;

String type — тип комнаты (например, "конференц-зал", "переговорная");

Set<String> amenities — набор удобств, доступных в комнате (например, "проектор", "видеоконференция").

Создайте класс Booking с полями:

int bookingId — уникальный идентификатор бронирования;

Room room — забронированная комната;

String date — дата бронирования;

String timeSlot — временной интервал бронирования.

Создайте интерфейс BookingObserver, который определяет метод void update(Booking booking, String status). Этот метод будет вызываться при изменении состояния бронирования (например, при создании или отмене бронирования).

Реализуйте класс BookingNotifier, который будет:

Хранить список наблюдателей (BookingObserver).

Иметь методы addObserver(BookingObserver observer) и removeObserver(BookingObserver observer) для добавления и удаления наблюдателей.

Содержать метод notifyObservers(Booking booking, String status), который будет вызывать метод update для всех зарегистрированных наблюдателей, уведомляя их об изменении статуса бронирования.

Создайте класс BookingSystem, который:

Хранит список комнат и бронирований.

Реализует методы:

addRoom(Room room) — добавляет комнату в систему.

removeRoom(int roomId) — удаляет комнату из системы.

bookRoom(int roomId, String date, String timeSlot) — бронирует комнату на указанную дату и временной интервал, если она доступна. При успешном бронировании уведомляет всех наблюдателей.

cancelBooking(int bookingId) — отменяет бронирование и уведомляет всех наблюдателей.

findAvailableRooms(String date, String timeSlot, Set<String> requiredAmenities) — возвращает список доступных комнат, которые подходят по дате, времени и набору удобств.

В качестве доп. задания:

реализуйте метод findBookingsForDate(String date), который возвращает список всех бронирований на указанную дату.

протестируйте программу, проверяя, что система корректно уведомляет наблюдателей при бронировании и отмене бронирований.

