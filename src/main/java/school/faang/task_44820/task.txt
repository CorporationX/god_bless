Условие задачи:
Создайте систему для получения и кэширования данных о погоде в разных городах с учетом срока их актуальности. Используйте паттерн "Шаблонный метод" для создания общего алгоритма с возможностью настройки шагов, таких как обновление данных или проверка актуальности кэша.

Цель: Изучить паттерн "Шаблонный метод" (Template Method) для создания гибкого алгоритма получения и кэширования данных, а также научиться управлять сроками действия кэша и оптимизировать запросы к внешним источникам данных.

Требования:
Создайте класс WeatherData с полями:

String city — название города;

double temperature — текущая температура;

double humidity — текущая влажность;

long timestamp — время получения данных (в миллисекундах), чтобы отслеживать срок их актуальности.

Создайте интерфейс WeatherProvider с методом WeatherData fetchWeatherData(String city), который возвращает свежие данные о погоде для указанного города.

Реализуйте класс WeatherService, который будет реализовывать WeatherProvider и имитировать получение данных о погоде. Метод fetchWeatherData должен "генерировать" случайные данные для температуры и влажности, а также проставлять текущее время в поле timestamp.

Создайте абстрактный класс WeatherCacheTemplate, который будет:

Содержать HashMap<String, WeatherData> для хранения данных о погоде.

Определять общий алгоритм getWeatherData(String city, long maxCacheAgeMillis) с использованием паттерна "Шаблонный метод":

Если данные есть в кэше и они актуальны, возвращать их.

Если данных нет или они устарели, запросить новые данные у внешнего источника, обновить кэш и вернуть свежие данные.

Иметь методы для проверки срока актуальности кэша и обновления данных. Позвольте подклассам переопределять эти методы.

Реализуйте два подкласса:

StandardWeatherCache — использует стандартное кэширование с указанным сроком действия данных.

FrequentUpdateWeatherCache — обновляет данные каждые maxCacheAgeMillis миллисекунд для частого запроса свежей информации (например, для городов с быстро меняющейся погодой).

Дополнительное задание:

реализуйте метод clearExpiredCache(long maxCacheAgeMillis), который удаляет устаревшие данные из кэша.

реализуйте юнит-тесты, проверяя, что алгоритм работает корректно для разных типов кэша, и что данные обновляются только при необходимости