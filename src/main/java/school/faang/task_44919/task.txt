Условие задачи:

Вы работаете в компании, которая управляет множеством проектов, для каждого из которых необходима уникальная команда. Ваша задача — создать систему для подбора команды для проекта на основе навыков сотрудников и требований проекта. Система должна поддерживать гибкое распределение сотрудников, в зависимости от политики назначения.

Цель: Научиться работать с коллекциями Set и List для управления уникальными и упорядоченными данными, а также освоить паттерн "Стратегия" для выбора подходящего алгоритма распределения сотрудников.

Требования:

Создайте класс Employee с полями:

int id: уникальный идентификатор сотрудника;

String name: имя сотрудника;

Set<String> skills: набор навыков сотрудника.

Создайте класс Project с полями:

int projectId: уникальный идентификатор проекта;

String name: название проекта;

Set<String> requiredSkills: набор навыков, необходимых для проекта;

List<Employee> teamMembers: список сотрудников, назначенных на проект.

Создайте интерфейс TeamAssignmentStrategy, определяющий метод assignTeam(Project project, List<Employee> employees). Метод должен принимать проект и список сотрудников и возвращать список сотрудников, соответствующих требованиям проекта.

Реализуйте несколько стратегий:

StandardTeamAssignmentStrategy — добавляет сотрудников в проект, пока не будут покрыты все необходимые навыки. Стратегия добавляет только тех сотрудников, которые обладают хотя бы одним необходимым навыком, пока проект не будет укомплектован.

BalancedTeamAssignmentStrategy — добавляет сотрудников так, чтобы равномерно распределить нагрузку между ними, избегая назначения одного сотрудника на слишком много проектов. Эта стратегия может учитывать количество уже назначенных проектов для каждого сотрудника.

Создайте класс ProjectManager, который:

Хранит списки сотрудников компании и проектов.

Имеет метод setAssignmentStrategy(TeamAssignmentStrategy strategy) для выбора стратегии распределения сотрудников.

Реализует метод assignTeamToProject(int projectId), который применяет выбранную стратегию для назначения команды на проект.

Поддерживает метод getTeamForProject(int projectId), возвращающий список сотрудников, назначенных на проект.

В качестве доп. задания:

реализуйте следующие методы в классе ProjectManager:

addEmployee(Employee employee) — добавляет сотрудника в систему.

findProjectsForEmployee(Employee employee) — возвращает список проектов, для которых сотрудник обладает необходимыми навыками.

assignEmployeeToProject(int projectId, Employee employee) — добавляет сотрудника в команду проекта, если у него есть все требуемые навыки.

removeEmployeeFromProject(int projectId, int employeeId) — удаляет сотрудника из команды проекта.

getTeamMembers(int projectId) — возвращает список сотрудников, назначенных на проект.

removeIneligibleEmployees(Project project), который удаляет из команды проекта тех сотрудников, которые больше не соответствуют его требованиям (например, при изменении набора необходимых навыков).

Протестируйте программу, проверяя, что разные стратегии корректно назначают сотрудников на проекты, и что к каждому проекту назначаются сотрудники с нужными навыками.