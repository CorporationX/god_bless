Supercow — игра, где игроки могут сражаться с боссами на различных уровнях.
Каждый босс имеет свой уровень сложности и максимальное количество игроков,
которые могут сражаться с ним одновременно. Когда игроки подключаются к боссу,
они должны сначала проверить, есть ли для игрока место в этом сражении с боссом,
и только после этого они могут присоединиться к сражению. Если все слоты заняты,
игроки должны ждать, пока один из них завершит сражение.

Создайте класс Boss с полями maxPlayers и currentPlayers.

Реализуйте метод joinBattle(Player player), который будет использоваться игроками
для присоединения к сражению с боссом. В методе используйте блок synchronized
для синхронизации доступа к боссу и его слотам.

В методе joinBattle(Player player) проверьте, есть ли свободные слоты для игроков.
Если есть, увеличьте количество занятых слотов
и позвольте игроку присоединиться к сражению.

Если все слоты заняты, используйте метод wait() для блокировки потока
игрока до тех пор, пока один из игроков не закончит сражение с боссом.

Когда игрок завершает сражение, вызовите метод notify() для уведомления
всех заблокированных потоков игроков о том, что теперь есть свободный слот.
Уменьшите количество занятых слотов.

Создайте класс Player с полем name.

Реализуйте метод startBattle(Boss boss), который позволяет игроку начать сражение с боссом.

В методе startBattle(Boss boss) вызовите метод joinBattle(Player player)
для присоединения к сражению. Если все слоты заняты, метод joinBattle(Player player)
заблокирует поток игрока до тех пор, пока не будет доступен свободный слот.

Проверьте правильность работы решения, создав экземпляр класса Boss с максимальным
количеством слотов и несколько экземпляров класса Player, которые будут пытаться
присоединиться к сражению с боссом.