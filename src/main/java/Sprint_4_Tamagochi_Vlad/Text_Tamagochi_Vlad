Задач становится так много, что удовлетворение базовых потребностей Влада
приходится программировать и запускать в нескольких потоках. Вы должны помочь
Владу наладить режим сна и питания. Ну ещё и поиграть с ним немного нужно,
а то у него стресс.

Ваше приложение должно имитировать работу с тамагочи, предоставляя пользователю
возможность кормить, играть и ухаживать за Владом. Вам нужно реализовать
класс TamagotchiVlad, который будет представлять Влада и иметь следующие методы:

feed(): метод для кормления Влада;

play(): метод для игры с Владом;

clean(): метод для очистки Влада;

sleep(): метод для перевода Влада в режим сна.

Каждый метод должен быть синхронизирован, чтобы предотвратить одновременный
доступ нескольких потоков к одному и тому же тамагочи. Кроме того, нужно
реализовать класс VladController, который будет управлять несколькими
экземплярами класса TamagotchiVlad. Контроллер должен иметь методы для
добавления и удаления тамагочи Влада, а также методы для общения со всеми
экземплярами Влада, например, методы feedAll(), playAll(), cleanAll() и sleepAll(),
которые будут вызывать соответствующие методы на всех экземплярах, находящихся в контроллере.

Важно, чтобы приложение было безопасным для многопоточного использования,
и чтобы методы контроллера не пытались обратиться к тамагочи, которые уже
были удалены из контроллера.

Также нужно предусмотреть возможность отслеживания состояния Влада и выводить
сообщения об изменении его состояния в консоль.

По желанию можно добавить обработчики ошибок.

Для проверки запустите несколько потоков.

Подсказка:
//Используйте Runnable для создания потоков. В потоках можно и разную логику описать,
им необязательно делать одно и то же
Thread thread1 = new Thread(() -> {
            controller.feedAll();
            controller.playAll();
            controller.cleanAll();
            controller.sleepAll();
        });
        Thread thread2 = new Thread(() -> {
            controller.playAll();
            controller.wakeUpAll();
						controller.playAll();
						controller.wakeUpAll();
        });