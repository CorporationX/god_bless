Поддержим животных
derschrank2000-S04-T16-BJS2-51571
derschrank.sprint04.task16.bjstwo_51571

Sprint04. Task16/2. AtomicInteger. Donation
------------------------------------
Поддержим животных
👩‍💻 🧠 (Дополнительная задача)


Условия задачи
Вам нужно создать многопоточную систему для учёта пожертвований, которая будет корректно работать даже при одновременном внесении пожертвований несколькими волонтёрами. Ваша задача — реализовать систему, которая предотвращает запись одного и того же пожертвования несколько раз в общий баланс. Необходимо обеспечить потокобезопасность при работе с общим балансом без использования synchronized.

Цель:
Создайте программу, которая будет корректно добавлять пожертвования в общий баланс организации в условиях многопоточности, используя механизмы потокобезопасности в Java.

Требования:
1️⃣ Создайте класс Donation, который представляет пожертвование. Поля:
id — уникальный идентификатор пожертвования (тип int),
amount — сумма пожертвования (тип double).
Создайте конструктор и геттеры для этих полей.

2️⃣ Создайте класс Organization, который будет представлять организацию. У организации должен быть общий баланс и метод addDonation(), который будет добавлять новое пожертвование в общий баланс. Логика метода addDonation() должна быть потокобезопасной, чтобы не происходило одновременной записи нескольких пожертвований в общий баланс. Подумайте, как безопасно добавить новое значение к общему балансу, не используя synchronized?

3️⃣ В методе main создайте несколько потоков, которые будут создавать пожертвования и добавлять их в баланс организации, используя метод addDonation().

4️⃣ После завершения всех потоков выведите итоговый баланс организации.

Почему эта задача полезна?
Данная задача имеет практическую значимость, поскольку в реальных условиях работы организации может возникнуть необходимость в потокобезопасности при работе с общими ресурсами, такими как баланс. Работа с многопоточностью требует особого внимания к синхронизации и блокировкам, чтобы избежать проблем, таких как гонки данных и состояние гонки.
------------------------------------
1:27:25: Executing ':derschrank.sprint04.task16.bjstwo_51571.Main.main()'…

> Task :compileJava
> Task :processResources NO-SOURCE
> Task :classes

> Task :derschrank.sprint04.task16.bjstwo_51571.Main.main()
Donations: 0, amount: 100
Donations: 2, amount: 100
Donations: 6, amount: 100
Donations: 1, amount: 100
Donations: 5, amount: 100
Donations: 4, amount: 100
Donations: 3, amount: 100
Donations: 12, amount: 100
...
onations: 991, amount: 100
Donations: 996, amount: 100
Donations: 997, amount: 100
Donations: 998, amount: 100
Donations: 999, amount: 100
Donations: 988, amount: 100
Donations: 985, amount: 100
Donations: 969, amount: 100
Donations: 992, amount: 100
Donations: 995, amount: 100
Donations: 994, amount: 100
Sum of Donations is: 100000