Условия задачи

Вы работаете в университете и разрабатываете систему для учёта студентов и их оценок по предметам. Ваша задача — создать программу на Java, которая будет использовать HashMap для хранения и обработки данных о студентах и оценках, предоставляя быстрый доступ к информации о каждом студенте и каждом предмете.

Цель: Научиться работать с коллекциями HashMap для эффективного хранения и управления данными, а также реализовать систему для учёта студентов и их оценок с возможностью добавления, удаления и изменения записей.

Требования:

Создайте класс Student, который содержит следующие поля:

int id — ID студента;

String name — имя студента.

2. Создайте класс Subject, который содержит следующие поля:

int id — ID предмета;

String name — название предмета.

В классе Main создайте две HashMap:

Первая HashMap<Student, Map<Subject, Integer>> для хранения списка предметов и оценок каждого студента.

Вторая HashMap<Subject, List<Student>> для хранения списка студентов, изучающих каждый предмет.

Реализуйте методы в классе StudentDatabase для следующих действий:

Добавление нового студента и его предметов с оценками.

Добавление нового предмета для существующего студента с оценкой.

Удаление студента и его предметов.

Вывод списка всех студентов и их оценок по предметам.

Реализуйте методы в классе StudentDatabase для работы со второй HashMap:

Добавление нового предмета и списка студентов, изучающих его.

Добавление студента к существующему предмету.

Удаление студента из предмета.

Вывод списка всех предметов и студентов, изучающих их.

В качестве доп. задания:

реализуйте юнит-тесты для проверки корректности работы методов.


----------------------------------
23:58:45: Executing ':derschrank.task10.bjstwo_45209.Main.main()'…

> Task :compileJava
> Task :processResources NO-SOURCE
> Task :classes

> Task :derschrank.task10.bjstwo_45209.Main.main()
All students with their  notes:
[1] Petr
 - Math: 4 - English: 4
[2] Ivan
 - Math: 5 - English: 5

All subjects with their students:

Add new student and his notes
All students with their  notes:
[1] Petr
 - Math: 4 - English: 4
[2] Sidr
 - Math: 5 - English: 5
[3] Ivan
 - Math: 5 - English: 5

Add new subject-note to the student
All students with their  notes:
[1] Petr
 - Math: 4 - English: 4
[2] Sidr
 - Math: 5 - English: 5
[3] Ivan
 - Biology: 4 - Math: 5 - Russian: 4 - English: 5

Delete the student
All students with their  notes:
[1] Petr
 - Math: 4 - English: 4
[2] Sidr
 - Math: 5 - English: 5

Add new subject and his students
All subjects with their students:
[1] Math: Petr, Ivan
[2] English: Petr, Ivan

Add student to subject
All subjects with their students:
[1] Biology: Petr
[2] Math: Petr, Ivan
[3] Russian: Ivan
[4] English: Petr, Ivan

Delete the student from subject
All subjects with their students:
[1] Biology: Petr
[2] Math: Petr
[3] Russian: Ivan
[4] English: Petr

toString:
All students with their  notes:
[1] Petr
 - Math: 4 - English: 4
[2] Sidr
 - Math: 5 - English: 5

All subjects with their students:
[1] Biology: Petr
[2] Math: Petr
[3] Russian: Ivan
[4] English: Petr


BUILD SUCCESSFUL in 4s
2 actionable tasks: 2 executed
23:58:50: Execution finished ':derschrank.task10.bjstwo_45209.Main.main()'.
