Условие задачи:
Вы — разработчик дроидов во вселенной «Звёздных Войн». Ваша задача — создать систему, в которой дроиды смогут отправлять и получать зашифрованные сообщения. Каждый дроид должен иметь возможность шифровать сообщения перед отправкой и расшифровывать их при получении. Для этого вы должны реализовать вспомогательные методы для шифрования и расшифровки, а также методы для отправки и получения сообщений.

Цель:
Создать класс Droid, который умеет:

шифровать и расшифровывать сообщения с помощью вспомогательных методов,

отправлять и получать сообщения с использованием этих вспомогательных методов.

Требования:
1️⃣ Создайте функциональный интерфейс DroidMessageEncryptor, который:

принимает сообщение (строку) и ключ шифрования (целое число),

возвращает зашифрованное или расшифрованное сообщение (строку).

2️⃣ Создайте класс Droid, который должен обладать следующими методами:

encryptMessage — вспомогательный метод, который шифрует сообщение с использованием ключа шифрования (например, шифр Цезаря). Сообщение и ключ передаются в виде параметров. Используйте DroidMessageEncryptor для реализации шифрования. Каждая буква смещается на заданное количество позиций в алфавите, остальные символы (например, пробелы и знаки препинания) остаются без изменений.

decryptMessage — вспомогательный метод, который расшифровывает сообщение с использованием ключа шифрования. Этот метод работает по аналогии с encryptMessage, но сдвигает символы в обратном направлении.

3️⃣ Отправка и получение сообщений:

sendMessage — метод для отправки зашифрованного сообщения другому дроиду. Он принимает сообщение, ключ шифрования и дроида-получателя. Сообщение шифруется с помощью метода encryptMessage, и зашифрованное сообщение передаётся другому дроиду через метод receiveMessage.

receiveMessage — метод для получения зашифрованного сообщения. Он принимает зашифрованное сообщение и ключ шифрования, расшифровывает его с помощью метода decryptMessage, а затем выводит расшифрованное сообщение на экран.

ВАЖНО: обычно вы не будете писать лямбды и сразу же их вызывать. Здесь мы хотим лишь показать, что лямбды — обычные объекты, которые вы можете тут же использовать. Но, как правило, они будут передаваться в методы, а затем уже на их объектах будет вызываться метод выполнения. Мы увидим это в прочих задачах.

4️⃣ Создайте нескольких дроидов и продемонстрируйте, как они могут обмениваться зашифрованными сообщениями, используя вышеуказанные методы. Убедитесь, что система корректно шифрует и расшифровывает сообщения с использованием ключей.

Пример использования:
public class Main {
    public static void main(String[] args) {
        // Создаём трёх дроидов
        Droid r2d2 = new Droid("R2D2");
        Droid c3po = new Droid("C3PO");
        Droid bb8 = new Droid("BB-8");

        // Оригинальные сообщения
        String message1 = "Join the Rebellion!";
        String message2 = "The Death Star is operational!";
        int encryptionKey1 = 3; // Ключ шифрования для первого сообщения
        int encryptionKey2 = 7; // Ключ шифрования для второго сообщения

        // R2D2 отправляет сообщение C3PO
        r2d2.sendMessage(c3po, message1, encryptionKey1);

        // C3PO отвечает R2D2
        c3po.sendMessage(r2d2, message2, encryptionKey2);

        // BB-8 отправляет сообщение C3PO
        bb8.sendMessage(c3po, "The mission is complete.", encryptionKey1);
    }
}

Пример вывода:
R2D2 отправил зашифрованное сообщение: MrLq wkh Uheloolrq!
C3PO получил расшифрованное сообщение: Join the Rebellion!
C3PO отправил зашифрованное сообщение: Aol Klla Aoyh zt vyplyaovsl!
R2D2 получил расшифрованное сообщение: The Death Star is operational!
BB-8 отправил зашифрованное сообщение: Wkh plvvlrq lv frpsohwh.
C3PO получил расшифрованное сообщение: The mission is complete.

--------------------

19:54:49: Executing ':derschrank.sprint02.task07.bjstwo_46653.Main.main()'…

> Task :compileJava
> Task :processResources NO-SOURCE
> Task :classes

> Task :derschrank.sprint02.task07.bjstwo_46653.Main.main()
R2D2 sent: Mrlq wkh Uhehoolrq!
C3PO received: Join the Rebellion!

C3PO sent: Bol Klhbo Abhy pa vwlyhbpvuhs!
R2D2 received: The Death Star is operational!

BB-8 sent: Wkh plvvlrq lv frpsohwh.
C3PO received: The mission is complete.


BUILD SUCCESSFUL in 5s
2 actionable tasks: 2 executed
19:54:55: Execution finished ':derschrank.sprint02.task07.bjstwo_46653.Main.main()'.
