package telegram;

import faang.school.godbless.telegram.MessageFilter;
import faang.school.godbless.telegram.MessageProcessor;
import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class MessageProcessorTest {
  @Test
  public void processMessageTest() {
    MessageProcessor messageProcessor = new MessageProcessor();

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    MessageFilter spamFilter = message -> message.toLowerCase().contains("—Å–ø–∞–º");
    MessageFilter lengthFilter = message -> message.length() > 10;
    MessageFilter emojiFilter = message -> message.contains("üòÄ");

    List<MessageFilter> filters = Arrays.asList(spamFilter, lengthFilter, emojiFilter);

    Map<String, Boolean> expectedResult = new HashMap<>();
    expectedResult.put("–ü—Ä–∏–≤–µ—Ç!", false);
    expectedResult.put("–≠—Ç–æ —Å–ø–∞–º!", true);
    expectedResult.put("–ö–∞–∫ –¥–µ–ª–∞? üòÄ", true);
    expectedResult.put("–î–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Å–ø–∞–º–∞ –∏ —ç–º–æ–¥–∑–∏", true);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    String[] messages = {"–ü—Ä–∏–≤–µ—Ç!", "–≠—Ç–æ —Å–ø–∞–º!", "–ö–∞–∫ –¥–µ–ª–∞? üòÄ", "–î–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Å–ø–∞–º–∞ –∏ —ç–º–æ–¥–∑–∏"};

    for (String message : messages) {
      boolean isFiltered = messageProcessor.processMessage(message, filters);
      System.out.println("–°–æ–æ–±—â–µ–Ω–∏–µ: " + message + " | –ü—Ä–æ–ø—É—â–µ–Ω–æ: " + isFiltered);

      assertEquals(expectedResult.get(message), isFiltered);
    }
  }
}
