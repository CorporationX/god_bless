package faang.school.godbless.BJS2_22142;

import org.assertj.core.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;

class MessageProcessorTest {
    private final ByteArrayOutputStream OUTPUT_CAPTOR = new ByteArrayOutputStream();
    private static final PrintStream ORIGINAL_OUTPUT = System.out;
    private MessageProcessor messageProcessor;
    private MessageFilter spamFilter;
    private MessageFilter lengthFilter;
    private MessageFilter emojiFilter;

    @BeforeEach
    void setUp() {
        System.setOut(new PrintStream(OUTPUT_CAPTOR));
        messageProcessor = new MessageProcessor();
        spamFilter = message -> !message.toLowerCase().contains("—Å–ø–∞–º");
        lengthFilter = message -> message.length() > 10;
        emojiFilter = message -> !message.contains("üòÄ");
    }

    @Test
    void processMessage() {
        List<MessageFilter> filters = new ArrayList<>(List.of(spamFilter, lengthFilter, emojiFilter));
        String[] messages = {"–ü—Ä–∏–≤–µ—Ç!", "–≠—Ç–æ —Å–ø–∞–º!", "–ö–∞–∫ –¥–µ–ª–∞? üòÄ", "–î–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Å–ø–∞–º–∞ –∏ —ç–º–æ–¥–∑–∏",
                "–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–æ—Ä –≤–Ω–µ—à–Ω–∏—Ö –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏–π, –∞ —Ç–∞–∫–∂–µ —Å–≤–µ–∂–∏–π –≤–∑–≥–ª—è–¥ –Ω–∞ –ø—Ä–∏–≤—ã—á–Ω—ã–µ –≤–µ—â–∏."};
        String expectedOutput = """
                –°–æ–æ–±—â–µ–Ω–∏–µ: –ü—Ä–∏–≤–µ—Ç! | –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: true
                –°–æ–æ–±—â–µ–Ω–∏–µ: –≠—Ç–æ —Å–ø–∞–º! | –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: true
                –°–æ–æ–±—â–µ–Ω–∏–µ: –ö–∞–∫ –¥–µ–ª–∞? üòÄ | –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: true
                –°–æ–æ–±—â–µ–Ω–∏–µ: –î–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Å–ø–∞–º–∞ –∏ —ç–º–æ–¥–∑–∏ | –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: true
                –°–æ–æ–±—â–µ–Ω–∏–µ: –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–æ—Ä –≤–Ω–µ—à–Ω–∏—Ö –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–∏–π, –∞ —Ç–∞–∫–∂–µ —Å–≤–µ–∂–∏–π –≤–∑–≥–ª—è–¥ –Ω–∞ –ø—Ä–∏–≤—ã—á–Ω—ã–µ –≤–µ—â–∏. | –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: false
                """;

        for (var message : messages) {
            boolean isFiltered = messageProcessor.processMessage(message, filters);
            System.out.println("–°–æ–æ–±—â–µ–Ω–∏–µ: " + message + " | –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: " + isFiltered);
        }

        Assertions.assertThat(normalize(OUTPUT_CAPTOR.toString())).isEqualTo(expectedOutput);
        System.setOut(ORIGINAL_OUTPUT);
        System.out.println(OUTPUT_CAPTOR);
    }

    private String normalize(String input) {
        return input.replaceAll("\\r+", "");
    }
}