package faang.school.godbless.sprint3.spam;

import java.util.List;
import java.util.stream.Stream;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import static org.junit.jupiter.api.Assertions.assertEquals;

class MessageProcessorTest {
    private MessageProcessor messageProcessor;
    private List<MessageFilter> filters;


    @BeforeEach
    void setUp() {
        messageProcessor = new MessageProcessor();
        filters = List.of(
                message -> !message.toLowerCase().contains("—Å–ø–∞–º"),
                message -> message.length() > 10,
                message -> !message.contains("üòÄ")
        );
    }

    @ParameterizedTest
    @MethodSource("getParams")
    void processMessage(String message, boolean expected) {
        boolean isFiltered = messageProcessor.processMessage(message, filters);
        System.out.println("–°–æ–æ–±—â–µ–Ω–∏–µ: " + message + " | –ü—Ä–æ–ø—É—â–µ–Ω–æ: " + isFiltered);
        assertEquals(expected, isFiltered);
    }

    static Stream<Arguments> getParams() {
        return Stream.of(
                Arguments.of("–ü—Ä–∏–≤–µ—Ç!", false),
                Arguments.of("–≠—Ç–æ —Å–ø–∞–º!", false),
                Arguments.of("–ö–∞–∫ –¥–µ–ª–∞? üòÄ", false),
                Arguments.of("–î–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Å–ø–∞–º–∞ –∏ —ç–º–æ–¥–∑–∏", false),
                Arguments.of("FAANG-SCHOOL", true)
        );
    }
}